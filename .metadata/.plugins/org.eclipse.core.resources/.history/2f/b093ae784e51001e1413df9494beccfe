package com.javatpoint.service;

import com.javatpoint.model.User;
import com.javatpoint.model.UserSignUp;

import com.javatpoint.repository.UserRepository;
import com.javatpoint.repository.UserSignUpRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

@Service
public class UserService {
	@Autowired
	UserSignUpRepository userSignupRepository;
	@Autowired
	private UserRepository userRepository;

	@Autowired
	private BCryptPasswordEncoder passwordEncoder; // Inject the password encoder

	public User convertSignupToUser(String username) {
		UserSignUp signupData = userSignupRepository.findByUsername(username);
		if (signupData != null) {
			User user = new User();
			user.setUsername(signupData.getUsername());
			user.setEmail(signupData.getEmail());
			String hashedPassword = passwordEncoder.encode(signupData.getPwd());
			user.setPassword(hashedPassword);
			userRepository.save(user);

			return user;
		}

		return null;
	}
}
